// Code generated by protoc-gen-go. DO NOT EDIT.
// source: admin-category.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AdminCategoryState struct {
	Disabled             bool     `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Opened               bool     `protobuf:"varint,2,opt,name=opened,proto3" json:"opened,omitempty"`
	Selected             bool     `protobuf:"varint,3,opt,name=selected,proto3" json:"selected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminCategoryState) Reset()         { *m = AdminCategoryState{} }
func (m *AdminCategoryState) String() string { return proto.CompactTextString(m) }
func (*AdminCategoryState) ProtoMessage()    {}
func (*AdminCategoryState) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{0}
}

func (m *AdminCategoryState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminCategoryState.Unmarshal(m, b)
}
func (m *AdminCategoryState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminCategoryState.Marshal(b, m, deterministic)
}
func (m *AdminCategoryState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminCategoryState.Merge(m, src)
}
func (m *AdminCategoryState) XXX_Size() int {
	return xxx_messageInfo_AdminCategoryState.Size(m)
}
func (m *AdminCategoryState) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminCategoryState.DiscardUnknown(m)
}

var xxx_messageInfo_AdminCategoryState proto.InternalMessageInfo

func (m *AdminCategoryState) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *AdminCategoryState) GetOpened() bool {
	if m != nil {
		return m.Opened
	}
	return false
}

func (m *AdminCategoryState) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

type AdminCategory struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               uint32              `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Text                 string              `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Alias                string              `protobuf:"bytes,4,opt,name=alias,proto3" json:"alias,omitempty"`
	Description          string              `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Image                string              `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Parent               string              `protobuf:"bytes,7,opt,name=parent,proto3" json:"parent,omitempty"`
	Sort                 uint32              `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`
	State                *AdminCategoryState `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	SeoTitle             string              `protobuf:"bytes,10,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title,omitempty"`
	SeoDescription       string              `protobuf:"bytes,11,opt,name=seo_description,json=seoDescription,proto3" json:"seo_description,omitempty"`
	SeoKeywords          string              `protobuf:"bytes,12,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AdminCategory) Reset()         { *m = AdminCategory{} }
func (m *AdminCategory) String() string { return proto.CompactTextString(m) }
func (*AdminCategory) ProtoMessage()    {}
func (*AdminCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{1}
}

func (m *AdminCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminCategory.Unmarshal(m, b)
}
func (m *AdminCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminCategory.Marshal(b, m, deterministic)
}
func (m *AdminCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminCategory.Merge(m, src)
}
func (m *AdminCategory) XXX_Size() int {
	return xxx_messageInfo_AdminCategory.Size(m)
}
func (m *AdminCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminCategory.DiscardUnknown(m)
}

var xxx_messageInfo_AdminCategory proto.InternalMessageInfo

func (m *AdminCategory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AdminCategory) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AdminCategory) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AdminCategory) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *AdminCategory) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AdminCategory) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *AdminCategory) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *AdminCategory) GetSort() uint32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *AdminCategory) GetState() *AdminCategoryState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *AdminCategory) GetSeoTitle() string {
	if m != nil {
		return m.SeoTitle
	}
	return ""
}

func (m *AdminCategory) GetSeoDescription() string {
	if m != nil {
		return m.SeoDescription
	}
	return ""
}

func (m *AdminCategory) GetSeoKeywords() string {
	if m != nil {
		return m.SeoKeywords
	}
	return ""
}

type AdminAddCategoryRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Parent               string   `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminAddCategoryRequest) Reset()         { *m = AdminAddCategoryRequest{} }
func (m *AdminAddCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*AdminAddCategoryRequest) ProtoMessage()    {}
func (*AdminAddCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{2}
}

func (m *AdminAddCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminAddCategoryRequest.Unmarshal(m, b)
}
func (m *AdminAddCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminAddCategoryRequest.Marshal(b, m, deterministic)
}
func (m *AdminAddCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminAddCategoryRequest.Merge(m, src)
}
func (m *AdminAddCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_AdminAddCategoryRequest.Size(m)
}
func (m *AdminAddCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminAddCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminAddCategoryRequest proto.InternalMessageInfo

func (m *AdminAddCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AdminAddCategoryRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *AdminAddCategoryRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type AdminDeleteCategoryRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminDeleteCategoryRequest) Reset()         { *m = AdminDeleteCategoryRequest{} }
func (m *AdminDeleteCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*AdminDeleteCategoryRequest) ProtoMessage()    {}
func (*AdminDeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{3}
}

func (m *AdminDeleteCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminDeleteCategoryRequest.Unmarshal(m, b)
}
func (m *AdminDeleteCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminDeleteCategoryRequest.Marshal(b, m, deterministic)
}
func (m *AdminDeleteCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminDeleteCategoryRequest.Merge(m, src)
}
func (m *AdminDeleteCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_AdminDeleteCategoryRequest.Size(m)
}
func (m *AdminDeleteCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminDeleteCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminDeleteCategoryRequest proto.InternalMessageInfo

func (m *AdminDeleteCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AdminMoveCategoryRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Parent               string   `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Position             uint32   `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminMoveCategoryRequest) Reset()         { *m = AdminMoveCategoryRequest{} }
func (m *AdminMoveCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*AdminMoveCategoryRequest) ProtoMessage()    {}
func (*AdminMoveCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{4}
}

func (m *AdminMoveCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminMoveCategoryRequest.Unmarshal(m, b)
}
func (m *AdminMoveCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminMoveCategoryRequest.Marshal(b, m, deterministic)
}
func (m *AdminMoveCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminMoveCategoryRequest.Merge(m, src)
}
func (m *AdminMoveCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_AdminMoveCategoryRequest.Size(m)
}
func (m *AdminMoveCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminMoveCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminMoveCategoryRequest proto.InternalMessageInfo

func (m *AdminMoveCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AdminMoveCategoryRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *AdminMoveCategoryRequest) GetPosition() uint32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type AdminCategoryRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminCategoryRequest) Reset()         { *m = AdminCategoryRequest{} }
func (m *AdminCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*AdminCategoryRequest) ProtoMessage()    {}
func (*AdminCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{5}
}

func (m *AdminCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminCategoryRequest.Unmarshal(m, b)
}
func (m *AdminCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminCategoryRequest.Marshal(b, m, deterministic)
}
func (m *AdminCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminCategoryRequest.Merge(m, src)
}
func (m *AdminCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_AdminCategoryRequest.Size(m)
}
func (m *AdminCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminCategoryRequest proto.InternalMessageInfo

func (m *AdminCategoryRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type AdminEditCategoryRequest struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	OldAlias             string   `protobuf:"bytes,2,opt,name=old_alias,json=oldAlias,proto3" json:"old_alias,omitempty"`
	Alias                string   `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Image                string   `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminEditCategoryRequest) Reset()         { *m = AdminEditCategoryRequest{} }
func (m *AdminEditCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*AdminEditCategoryRequest) ProtoMessage()    {}
func (*AdminEditCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{6}
}

func (m *AdminEditCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminEditCategoryRequest.Unmarshal(m, b)
}
func (m *AdminEditCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminEditCategoryRequest.Marshal(b, m, deterministic)
}
func (m *AdminEditCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminEditCategoryRequest.Merge(m, src)
}
func (m *AdminEditCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_AdminEditCategoryRequest.Size(m)
}
func (m *AdminEditCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminEditCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminEditCategoryRequest proto.InternalMessageInfo

func (m *AdminEditCategoryRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdminEditCategoryRequest) GetOldAlias() string {
	if m != nil {
		return m.OldAlias
	}
	return ""
}

func (m *AdminEditCategoryRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *AdminEditCategoryRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AdminEditCategoryRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type AdminUploadCategoryRequest struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ParentId             uint32   `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminUploadCategoryRequest) Reset()         { *m = AdminUploadCategoryRequest{} }
func (m *AdminUploadCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*AdminUploadCategoryRequest) ProtoMessage()    {}
func (*AdminUploadCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{7}
}

func (m *AdminUploadCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminUploadCategoryRequest.Unmarshal(m, b)
}
func (m *AdminUploadCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminUploadCategoryRequest.Marshal(b, m, deterministic)
}
func (m *AdminUploadCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminUploadCategoryRequest.Merge(m, src)
}
func (m *AdminUploadCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_AdminUploadCategoryRequest.Size(m)
}
func (m *AdminUploadCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminUploadCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminUploadCategoryRequest proto.InternalMessageInfo

func (m *AdminUploadCategoryRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdminUploadCategoryRequest) GetParentId() uint32 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

type AdminCategoryResponse struct {
	Category             *AdminCategory `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AdminCategoryResponse) Reset()         { *m = AdminCategoryResponse{} }
func (m *AdminCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*AdminCategoryResponse) ProtoMessage()    {}
func (*AdminCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{8}
}

func (m *AdminCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminCategoryResponse.Unmarshal(m, b)
}
func (m *AdminCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminCategoryResponse.Marshal(b, m, deterministic)
}
func (m *AdminCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminCategoryResponse.Merge(m, src)
}
func (m *AdminCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_AdminCategoryResponse.Size(m)
}
func (m *AdminCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AdminCategoryResponse proto.InternalMessageInfo

func (m *AdminCategoryResponse) GetCategory() *AdminCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

type AdminCategoriesResponse struct {
	Categories           []*AdminCategory `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AdminCategoriesResponse) Reset()         { *m = AdminCategoriesResponse{} }
func (m *AdminCategoriesResponse) String() string { return proto.CompactTextString(m) }
func (*AdminCategoriesResponse) ProtoMessage()    {}
func (*AdminCategoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e65994e8d26ac5a, []int{9}
}

func (m *AdminCategoriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminCategoriesResponse.Unmarshal(m, b)
}
func (m *AdminCategoriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminCategoriesResponse.Marshal(b, m, deterministic)
}
func (m *AdminCategoriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminCategoriesResponse.Merge(m, src)
}
func (m *AdminCategoriesResponse) XXX_Size() int {
	return xxx_messageInfo_AdminCategoriesResponse.Size(m)
}
func (m *AdminCategoriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminCategoriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AdminCategoriesResponse proto.InternalMessageInfo

func (m *AdminCategoriesResponse) GetCategories() []*AdminCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

func init() {
	proto.RegisterType((*AdminCategoryState)(nil), "v1.AdminCategoryState")
	proto.RegisterType((*AdminCategory)(nil), "v1.AdminCategory")
	proto.RegisterType((*AdminAddCategoryRequest)(nil), "v1.AdminAddCategoryRequest")
	proto.RegisterType((*AdminDeleteCategoryRequest)(nil), "v1.AdminDeleteCategoryRequest")
	proto.RegisterType((*AdminMoveCategoryRequest)(nil), "v1.AdminMoveCategoryRequest")
	proto.RegisterType((*AdminCategoryRequest)(nil), "v1.AdminCategoryRequest")
	proto.RegisterType((*AdminEditCategoryRequest)(nil), "v1.AdminEditCategoryRequest")
	proto.RegisterType((*AdminUploadCategoryRequest)(nil), "v1.AdminUploadCategoryRequest")
	proto.RegisterType((*AdminCategoryResponse)(nil), "v1.AdminCategoryResponse")
	proto.RegisterType((*AdminCategoriesResponse)(nil), "v1.AdminCategoriesResponse")
}

func init() {
	proto.RegisterFile("admin-category.proto", fileDescriptor_8e65994e8d26ac5a)
}

var fileDescriptor_8e65994e8d26ac5a = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdb, 0x4e, 0xdb, 0x4c,
	0x10, 0x56, 0x12, 0x12, 0x9c, 0x09, 0x87, 0x9f, 0xfd, 0x69, 0xd8, 0x86, 0xaa, 0x4a, 0x7d, 0x53,
	0x2e, 0xc0, 0x08, 0xfa, 0x04, 0x69, 0x01, 0x09, 0x95, 0x9e, 0x4c, 0xb9, 0x2d, 0x32, 0xd9, 0x21,
	0x5a, 0xd5, 0x64, 0x5d, 0xef, 0x92, 0x96, 0x67, 0xe9, 0xb3, 0xf1, 0x2e, 0xd5, 0x1e, 0x62, 0x1c,
	0xdb, 0x32, 0x55, 0xb9, 0xf3, 0xcc, 0xce, 0xf7, 0xf9, 0x9b, 0x23, 0x6c, 0x46, 0xec, 0x86, 0x4f,
	0xf7, 0xc6, 0x91, 0xc2, 0x89, 0x48, 0xef, 0x82, 0x24, 0x15, 0x4a, 0x90, 0xe6, 0xec, 0x60, 0xb0,
	0x3d, 0x11, 0x62, 0x12, 0xe3, 0xbe, 0xf1, 0x5c, 0xdd, 0x5e, 0xef, 0xe3, 0x4d, 0xa2, 0x5c, 0x80,
	0xcf, 0x80, 0x8c, 0x34, 0xf0, 0x9d, 0xc3, 0x9d, 0xab, 0x48, 0x21, 0x19, 0x80, 0xc7, 0xb8, 0x8c,
	0xae, 0x62, 0x64, 0xb4, 0x31, 0x6c, 0xec, 0x78, 0x61, 0x66, 0x93, 0x3e, 0x74, 0x44, 0x82, 0x53,
	0x64, 0xb4, 0x69, 0x5e, 0x9c, 0xa5, 0x31, 0x12, 0x63, 0x1c, 0x2b, 0x64, 0xb4, 0x65, 0x31, 0x73,
	0xdb, 0xbf, 0x6f, 0xc2, 0xea, 0xc2, 0x6f, 0xc8, 0x1a, 0x34, 0xb9, 0xe5, 0xee, 0x86, 0x4d, 0xce,
	0xc8, 0x16, 0x2c, 0xdf, 0x4a, 0x4c, 0x2f, 0xb9, 0xa5, 0x5d, 0x0d, 0x3b, 0xda, 0x3c, 0x65, 0x84,
	0xc0, 0x92, 0xc2, 0x5f, 0xca, 0x50, 0x76, 0x43, 0xf3, 0x4d, 0x36, 0xa1, 0x1d, 0xc5, 0x3c, 0x92,
	0x74, 0xc9, 0x38, 0xad, 0x41, 0x86, 0xd0, 0x63, 0x28, 0xc7, 0x29, 0x4f, 0x14, 0x17, 0x53, 0xda,
	0x36, 0x6f, 0x79, 0x97, 0xc6, 0xf1, 0x9b, 0x68, 0x82, 0xb4, 0x63, 0x71, 0xc6, 0xd0, 0x09, 0x25,
	0x51, 0x8a, 0x53, 0x45, 0x97, 0x8d, 0xdb, 0x59, 0xfa, 0xcf, 0x52, 0xa4, 0x8a, 0x7a, 0x46, 0x8f,
	0xf9, 0x26, 0xbb, 0xd0, 0x96, 0xba, 0x42, 0xb4, 0x3b, 0x6c, 0xec, 0xf4, 0x0e, 0xfb, 0xc1, 0xec,
	0x20, 0x28, 0xd7, 0x2f, 0xb4, 0x41, 0x64, 0x1b, 0xba, 0x12, 0xc5, 0xa5, 0xe2, 0x2a, 0x46, 0x0a,
	0x86, 0xdc, 0x93, 0x28, 0xbe, 0x6a, 0x9b, 0xbc, 0x86, 0x75, 0xfd, 0x98, 0x97, 0xdc, 0x33, 0x21,
	0x6b, 0x12, 0xc5, 0x51, 0x4e, 0xf5, 0x2b, 0x58, 0xd1, 0x81, 0xdf, 0xf1, 0xee, 0xa7, 0x48, 0x99,
	0xa4, 0x2b, 0x36, 0x31, 0x89, 0xe2, 0xbd, 0x73, 0xf9, 0x17, 0xb0, 0x65, 0x54, 0x8c, 0x18, 0x9b,
	0x0b, 0x09, 0xf1, 0xc7, 0x2d, 0x4a, 0x55, 0x2a, 0xf4, 0x43, 0xb6, 0xcd, 0x62, 0xb6, 0xc5, 0x3a,
	0xfb, 0xbb, 0x30, 0x30, 0xb4, 0x47, 0x18, 0xa3, 0xc2, 0x47, 0x98, 0xfd, 0x6f, 0x40, 0x4d, 0xf4,
	0x07, 0x31, 0xc3, 0x7f, 0x55, 0x31, 0x00, 0x2f, 0x11, 0x92, 0x9b, 0x6a, 0xb4, 0x4c, 0xdd, 0x33,
	0xdb, 0xdf, 0x85, 0xcd, 0x85, 0x52, 0xcf, 0xb9, 0xb3, 0x69, 0x68, 0xe4, 0xa6, 0xc1, 0xff, 0xdd,
	0x70, 0x72, 0x8e, 0x19, 0x57, 0x15, 0x10, 0xdb, 0x14, 0x07, 0x31, 0x86, 0x6e, 0x97, 0x88, 0xd9,
	0xa5, 0x25, 0xb3, 0xba, 0x3c, 0x11, 0xb3, 0x91, 0x99, 0xae, 0xec, 0x2f, 0xad, 0x9a, 0x99, 0x5b,
	0xaa, 0x99, 0xb9, 0x76, 0x6e, 0xe6, 0xfc, 0x4f, 0xae, 0xb2, 0x17, 0x49, 0x2c, 0x22, 0xf6, 0xd7,
	0xf2, 0x6c, 0x95, 0x1e, 0x96, 0xc4, 0xb3, 0x8e, 0x53, 0xe6, 0x9f, 0xc0, 0xb3, 0x42, 0x71, 0x64,
	0x22, 0xa6, 0x12, 0xc9, 0x1e, 0x78, 0xf3, 0x9b, 0x60, 0xe8, 0x7a, 0x87, 0x1b, 0xa5, 0xa1, 0x0d,
	0xb3, 0x10, 0xff, 0xcc, 0x4d, 0x92, 0x7b, 0xe2, 0x28, 0x33, 0xa6, 0x03, 0x80, 0x71, 0xe6, 0xa5,
	0x8d, 0x61, 0xab, 0x9a, 0x2b, 0x17, 0x74, 0x78, 0xdf, 0x2e, 0xf4, 0xec, 0x1c, 0xd3, 0x19, 0x1f,
	0x23, 0x39, 0x2a, 0xde, 0x03, 0x5a, 0x26, 0xb2, 0xc5, 0x18, 0x3c, 0xaf, 0x78, 0x71, 0x8a, 0x4e,
	0x60, 0xbd, 0x20, 0x96, 0xf4, 0x03, 0x7b, 0xed, 0x82, 0xf9, 0xb5, 0x0b, 0x8e, 0xf5, 0xb5, 0x1b,
	0x6c, 0x17, 0x59, 0xf2, 0x99, 0x9d, 0xc1, 0x7f, 0xc5, 0xf5, 0x21, 0x0f, 0x80, 0xf2, 0x52, 0xd5,
	0xb3, 0x85, 0xd0, 0x2f, 0xe2, 0xde, 0xe2, 0xb5, 0x48, 0xf1, 0x09, 0x9c, 0x5f, 0x5c, 0x7b, 0x73,
	0xb8, 0xd1, 0xb5, 0xc2, 0xf4, 0x49, 0x32, 0xff, 0xaf, 0x58, 0x6e, 0xf2, 0x32, 0xc3, 0x54, 0x6e,
	0x7d, 0x3d, 0xe7, 0x47, 0xd8, 0x28, 0x9d, 0x00, 0xf2, 0x22, 0x43, 0x54, 0x5c, 0x86, 0xc7, 0x1a,
	0xb3, 0x51, 0xda, 0xe1, 0x1c, 0x5f, 0xc5, 0x6a, 0xd7, 0x8d, 0xcb, 0x67, 0x97, 0xf1, 0xe2, 0xd2,
	0xe5, 0x32, 0xae, 0xdc, 0xc6, 0x1a, 0xc6, 0xab, 0x8e, 0x99, 0xb2, 0x37, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x04, 0xb4, 0x26, 0x7d, 0x7d, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AdminCategoryServiceClient is the client API for AdminCategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminCategoryServiceClient interface {
	AdminCategory(ctx context.Context, in *AdminCategoryRequest, opts ...grpc.CallOption) (*AdminCategoryResponse, error)
	AdminCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AdminCategoriesResponse, error)
	AdminAddCategory(ctx context.Context, in *AdminAddCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error)
	AdminAddCategoryBefore(ctx context.Context, in *AdminAddCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error)
	AdminAddCategoryAfter(ctx context.Context, in *AdminAddCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error)
	AdminDeleteCategory(ctx context.Context, in *AdminDeleteCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error)
	AdminMoveCategory(ctx context.Context, in *AdminMoveCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error)
	AdminEditCategory(ctx context.Context, in *AdminEditCategoryRequest, opts ...grpc.CallOption) (*AdminCategoryResponse, error)
	AdminUploadCategory(ctx context.Context, in *AdminUploadCategoryRequest, opts ...grpc.CallOption) (*AdminCategoryResponse, error)
}

type adminCategoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminCategoryServiceClient(cc grpc.ClientConnInterface) AdminCategoryServiceClient {
	return &adminCategoryServiceClient{cc}
}

func (c *adminCategoryServiceClient) AdminCategory(ctx context.Context, in *AdminCategoryRequest, opts ...grpc.CallOption) (*AdminCategoryResponse, error) {
	out := new(AdminCategoryResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AdminCategoriesResponse, error) {
	out := new(AdminCategoriesResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminAddCategory(ctx context.Context, in *AdminAddCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error) {
	out := new(AdminCategoriesResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminAddCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminAddCategoryBefore(ctx context.Context, in *AdminAddCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error) {
	out := new(AdminCategoriesResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminAddCategoryBefore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminAddCategoryAfter(ctx context.Context, in *AdminAddCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error) {
	out := new(AdminCategoriesResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminAddCategoryAfter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminDeleteCategory(ctx context.Context, in *AdminDeleteCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error) {
	out := new(AdminCategoriesResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminDeleteCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminMoveCategory(ctx context.Context, in *AdminMoveCategoryRequest, opts ...grpc.CallOption) (*AdminCategoriesResponse, error) {
	out := new(AdminCategoriesResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminMoveCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminEditCategory(ctx context.Context, in *AdminEditCategoryRequest, opts ...grpc.CallOption) (*AdminCategoryResponse, error) {
	out := new(AdminCategoryResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminEditCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCategoryServiceClient) AdminUploadCategory(ctx context.Context, in *AdminUploadCategoryRequest, opts ...grpc.CallOption) (*AdminCategoryResponse, error) {
	out := new(AdminCategoryResponse)
	err := c.cc.Invoke(ctx, "/v1.AdminCategoryService/AdminUploadCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminCategoryServiceServer is the server API for AdminCategoryService service.
type AdminCategoryServiceServer interface {
	AdminCategory(context.Context, *AdminCategoryRequest) (*AdminCategoryResponse, error)
	AdminCategories(context.Context, *empty.Empty) (*AdminCategoriesResponse, error)
	AdminAddCategory(context.Context, *AdminAddCategoryRequest) (*AdminCategoriesResponse, error)
	AdminAddCategoryBefore(context.Context, *AdminAddCategoryRequest) (*AdminCategoriesResponse, error)
	AdminAddCategoryAfter(context.Context, *AdminAddCategoryRequest) (*AdminCategoriesResponse, error)
	AdminDeleteCategory(context.Context, *AdminDeleteCategoryRequest) (*AdminCategoriesResponse, error)
	AdminMoveCategory(context.Context, *AdminMoveCategoryRequest) (*AdminCategoriesResponse, error)
	AdminEditCategory(context.Context, *AdminEditCategoryRequest) (*AdminCategoryResponse, error)
	AdminUploadCategory(context.Context, *AdminUploadCategoryRequest) (*AdminCategoryResponse, error)
}

// UnimplementedAdminCategoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminCategoryServiceServer struct {
}

func (*UnimplementedAdminCategoryServiceServer) AdminCategory(ctx context.Context, req *AdminCategoryRequest) (*AdminCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminCategory not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminCategories(ctx context.Context, req *empty.Empty) (*AdminCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminCategories not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminAddCategory(ctx context.Context, req *AdminAddCategoryRequest) (*AdminCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminAddCategory not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminAddCategoryBefore(ctx context.Context, req *AdminAddCategoryRequest) (*AdminCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminAddCategoryBefore not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminAddCategoryAfter(ctx context.Context, req *AdminAddCategoryRequest) (*AdminCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminAddCategoryAfter not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminDeleteCategory(ctx context.Context, req *AdminDeleteCategoryRequest) (*AdminCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminDeleteCategory not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminMoveCategory(ctx context.Context, req *AdminMoveCategoryRequest) (*AdminCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminMoveCategory not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminEditCategory(ctx context.Context, req *AdminEditCategoryRequest) (*AdminCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminEditCategory not implemented")
}
func (*UnimplementedAdminCategoryServiceServer) AdminUploadCategory(ctx context.Context, req *AdminUploadCategoryRequest) (*AdminCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminUploadCategory not implemented")
}

func RegisterAdminCategoryServiceServer(s *grpc.Server, srv AdminCategoryServiceServer) {
	s.RegisterService(&_AdminCategoryService_serviceDesc, srv)
}

func _AdminCategoryService_AdminCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminCategory(ctx, req.(*AdminCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminCategories(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminAddCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminAddCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminAddCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminAddCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminAddCategory(ctx, req.(*AdminAddCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminAddCategoryBefore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminAddCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminAddCategoryBefore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminAddCategoryBefore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminAddCategoryBefore(ctx, req.(*AdminAddCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminAddCategoryAfter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminAddCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminAddCategoryAfter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminAddCategoryAfter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminAddCategoryAfter(ctx, req.(*AdminAddCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminDeleteCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminDeleteCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminDeleteCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminDeleteCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminDeleteCategory(ctx, req.(*AdminDeleteCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminMoveCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminMoveCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminMoveCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminMoveCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminMoveCategory(ctx, req.(*AdminMoveCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminEditCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminEditCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminEditCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminEditCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminEditCategory(ctx, req.(*AdminEditCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCategoryService_AdminUploadCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminUploadCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCategoryServiceServer).AdminUploadCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.AdminCategoryService/AdminUploadCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCategoryServiceServer).AdminUploadCategory(ctx, req.(*AdminUploadCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminCategoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.AdminCategoryService",
	HandlerType: (*AdminCategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AdminCategory",
			Handler:    _AdminCategoryService_AdminCategory_Handler,
		},
		{
			MethodName: "AdminCategories",
			Handler:    _AdminCategoryService_AdminCategories_Handler,
		},
		{
			MethodName: "AdminAddCategory",
			Handler:    _AdminCategoryService_AdminAddCategory_Handler,
		},
		{
			MethodName: "AdminAddCategoryBefore",
			Handler:    _AdminCategoryService_AdminAddCategoryBefore_Handler,
		},
		{
			MethodName: "AdminAddCategoryAfter",
			Handler:    _AdminCategoryService_AdminAddCategoryAfter_Handler,
		},
		{
			MethodName: "AdminDeleteCategory",
			Handler:    _AdminCategoryService_AdminDeleteCategory_Handler,
		},
		{
			MethodName: "AdminMoveCategory",
			Handler:    _AdminCategoryService_AdminMoveCategory_Handler,
		},
		{
			MethodName: "AdminEditCategory",
			Handler:    _AdminCategoryService_AdminEditCategory_Handler,
		},
		{
			MethodName: "AdminUploadCategory",
			Handler:    _AdminCategoryService_AdminUploadCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin-category.proto",
}
