// source: item.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var category_pb = require('./category_pb.js');
goog.object.extend(proto, category_pb);
var property_pb = require('./property_pb.js');
goog.object.extend(proto, property_pb);
var vendor_pb = require('./vendor_pb.js');
goog.object.extend(proto, vendor_pb);
var currency_pb = require('./currency_pb.js');
goog.object.extend(proto, currency_pb);
goog.exportSymbol('proto.v1.Item', null, global);
goog.exportSymbol('proto.v1.ItemImage', null, global);
goog.exportSymbol('proto.v1.ItemRequest', null, global);
goog.exportSymbol('proto.v1.ItemResponse', null, global);
goog.exportSymbol('proto.v1.ItemsRequest', null, global);
goog.exportSymbol('proto.v1.ItemsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.Item.repeatedFields_, null);
};
goog.inherits(proto.v1.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Item.displayName = 'proto.v1.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ItemImage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ItemImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ItemImage.displayName = 'proto.v1.ItemImage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ItemRequest.displayName = 'proto.v1.ItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ItemsRequest.displayName = 'proto.v1.ItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ItemResponse.displayName = 'proto.v1.ItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.ItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.v1.ItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ItemsResponse.displayName = 'proto.v1.ItemsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.Item.repeatedFields_ = [23,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    parentId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    article: jspb.Message.getFieldWithDefault(msg, 7, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 8, ""),
    description: jspb.Message.getFieldWithDefault(msg, 9, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    oldPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    count: jspb.Message.getFieldWithDefault(msg, 13, 0),
    inStock: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    disable: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    sort: jspb.Message.getFieldWithDefault(msg, 16, 0),
    seoTitle: jspb.Message.getFieldWithDefault(msg, 17, ""),
    seoDescription: jspb.Message.getFieldWithDefault(msg, 18, ""),
    seoKeywords: jspb.Message.getFieldWithDefault(msg, 19, ""),
    properties: (f = msg.getProperties()) && property_pb.Property.toObject(includeInstance, f),
    vendor: (f = msg.getVendor()) && vendor_pb.Vendor.toObject(includeInstance, f),
    currency: (f = msg.getCurrency()) && currency_pb.Currency.toObject(includeInstance, f),
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    proto.v1.ItemImage.toObject, includeInstance),
    offersList: jspb.Message.toObjectList(msg.getOffersList(),
    proto.v1.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Item}
 */
proto.v1.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Item;
  return proto.v1.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Item}
 */
proto.v1.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParentId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCategoryId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOldPrice(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInStock(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisable(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSort(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeoTitle(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeoDescription(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeoKeywords(value);
      break;
    case 20:
      var value = new property_pb.Property;
      reader.readMessage(value,property_pb.Property.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    case 21:
      var value = new vendor_pb.Vendor;
      reader.readMessage(value,vendor_pb.Vendor.deserializeBinaryFromReader);
      msg.setVendor(value);
      break;
    case 22:
      var value = new currency_pb.Currency;
      reader.readMessage(value,currency_pb.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 23:
      var value = new proto.v1.ItemImage;
      reader.readMessage(value,proto.v1.ItemImage.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    case 24:
      var value = new proto.v1.Item;
      reader.readMessage(value,proto.v1.Item.deserializeBinaryFromReader);
      msg.addOffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getArticle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getOldPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getInStock();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDisable();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getSort();
  if (f !== 0) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = message.getSeoTitle();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSeoDescription();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSeoKeywords();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      property_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getVendor();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      vendor_pb.Vendor.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      currency_pb.Currency.serializeBinaryToWriter
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      23,
      f,
      proto.v1.ItemImage.serializeBinaryToWriter
    );
  }
  f = message.getOffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      proto.v1.Item.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.Item.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 user_id = 2;
 * @return {number}
 */
proto.v1.Item.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 parent_id = 4;
 * @return {number}
 */
proto.v1.Item.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setParentId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 category_id = 5;
 * @return {number}
 */
proto.v1.Item.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setCategoryId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.v1.Item.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string article = 7;
 * @return {string}
 */
proto.v1.Item.prototype.getArticle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setArticle = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string alias = 8;
 * @return {string}
 */
proto.v1.Item.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string description = 9;
 * @return {string}
 */
proto.v1.Item.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional float price = 10;
 * @return {number}
 */
proto.v1.Item.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float old_price = 11;
 * @return {number}
 */
proto.v1.Item.prototype.getOldPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setOldPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional int32 count = 13;
 * @return {number}
 */
proto.v1.Item.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool in_stock = 14;
 * @return {boolean}
 */
proto.v1.Item.prototype.getInStock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setInStock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool disable = 15;
 * @return {boolean}
 */
proto.v1.Item.prototype.getDisable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setDisable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional uint32 sort = 16;
 * @return {number}
 */
proto.v1.Item.prototype.getSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setSort = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string seo_title = 17;
 * @return {string}
 */
proto.v1.Item.prototype.getSeoTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setSeoTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string seo_description = 18;
 * @return {string}
 */
proto.v1.Item.prototype.getSeoDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setSeoDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string seo_keywords = 19;
 * @return {string}
 */
proto.v1.Item.prototype.getSeoKeywords = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.setSeoKeywords = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional Property properties = 20;
 * @return {?proto.v1.Property}
 */
proto.v1.Item.prototype.getProperties = function() {
  return /** @type{?proto.v1.Property} */ (
    jspb.Message.getWrapperField(this, property_pb.Property, 20));
};


/**
 * @param {?proto.v1.Property|undefined} value
 * @return {!proto.v1.Item} returns this
*/
proto.v1.Item.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Item.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Vendor vendor = 21;
 * @return {?proto.v1.Vendor}
 */
proto.v1.Item.prototype.getVendor = function() {
  return /** @type{?proto.v1.Vendor} */ (
    jspb.Message.getWrapperField(this, vendor_pb.Vendor, 21));
};


/**
 * @param {?proto.v1.Vendor|undefined} value
 * @return {!proto.v1.Item} returns this
*/
proto.v1.Item.prototype.setVendor = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.clearVendor = function() {
  return this.setVendor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Item.prototype.hasVendor = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional Currency currency = 22;
 * @return {?proto.v1.Currency}
 */
proto.v1.Item.prototype.getCurrency = function() {
  return /** @type{?proto.v1.Currency} */ (
    jspb.Message.getWrapperField(this, currency_pb.Currency, 22));
};


/**
 * @param {?proto.v1.Currency|undefined} value
 * @return {!proto.v1.Item} returns this
*/
proto.v1.Item.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Item.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * repeated ItemImage images = 23;
 * @return {!Array<!proto.v1.ItemImage>}
 */
proto.v1.Item.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.v1.ItemImage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.ItemImage, 23));
};


/**
 * @param {!Array<!proto.v1.ItemImage>} value
 * @return {!proto.v1.Item} returns this
*/
proto.v1.Item.prototype.setImagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 23, value);
};


/**
 * @param {!proto.v1.ItemImage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.ItemImage}
 */
proto.v1.Item.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 23, opt_value, proto.v1.ItemImage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * repeated Item offers = 24;
 * @return {!Array<!proto.v1.Item>}
 */
proto.v1.Item.prototype.getOffersList = function() {
  return /** @type{!Array<!proto.v1.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.Item, 24));
};


/**
 * @param {!Array<!proto.v1.Item>} value
 * @return {!proto.v1.Item} returns this
*/
proto.v1.Item.prototype.setOffersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.v1.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.Item}
 */
proto.v1.Item.prototype.addOffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.v1.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.Item} returns this
 */
proto.v1.Item.prototype.clearOffersList = function() {
  return this.setOffersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ItemImage.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ItemImage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ItemImage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemImage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    itemId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    filename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sort: jspb.Message.getFieldWithDefault(msg, 5, 0),
    propertyValueId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    main: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ItemImage}
 */
proto.v1.ItemImage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ItemImage;
  return proto.v1.ItemImage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ItemImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ItemImage}
 */
proto.v1.ItemImage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSort(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPropertyValueId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ItemImage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ItemImage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ItemImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemImage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getItemId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSort();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getPropertyValueId();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getMain();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.v1.ItemImage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemImage} returns this
 */
proto.v1.ItemImage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 user_id = 2;
 * @return {number}
 */
proto.v1.ItemImage.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemImage} returns this
 */
proto.v1.ItemImage.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 item_id = 3;
 * @return {number}
 */
proto.v1.ItemImage.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemImage} returns this
 */
proto.v1.ItemImage.prototype.setItemId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string filename = 4;
 * @return {string}
 */
proto.v1.ItemImage.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.ItemImage} returns this
 */
proto.v1.ItemImage.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 sort = 5;
 * @return {number}
 */
proto.v1.ItemImage.prototype.getSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemImage} returns this
 */
proto.v1.ItemImage.prototype.setSort = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 property_value_id = 6;
 * @return {number}
 */
proto.v1.ItemImage.prototype.getPropertyValueId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemImage} returns this
 */
proto.v1.ItemImage.prototype.setPropertyValueId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool main = 7;
 * @return {boolean}
 */
proto.v1.ItemImage.prototype.getMain = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.ItemImage} returns this
 */
proto.v1.ItemImage.prototype.setMain = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ItemRequest}
 */
proto.v1.ItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ItemRequest;
  return proto.v1.ItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ItemRequest}
 */
proto.v1.ItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.v1.ItemRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemRequest} returns this
 */
proto.v1.ItemRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sort: jspb.Message.getFieldWithDefault(msg, 3, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ItemsRequest}
 */
proto.v1.ItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ItemsRequest;
  return proto.v1.ItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ItemsRequest}
 */
proto.v1.ItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 page = 1;
 * @return {number}
 */
proto.v1.ItemsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemsRequest} returns this
 */
proto.v1.ItemsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 page_size = 2;
 * @return {number}
 */
proto.v1.ItemsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemsRequest} returns this
 */
proto.v1.ItemsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string sort = 3;
 * @return {string}
 */
proto.v1.ItemsRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.ItemsRequest} returns this
 */
proto.v1.ItemsRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string direction = 4;
 * @return {string}
 */
proto.v1.ItemsRequest.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.ItemsRequest} returns this
 */
proto.v1.ItemsRequest.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && proto.v1.Item.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ItemResponse}
 */
proto.v1.ItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ItemResponse;
  return proto.v1.ItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ItemResponse}
 */
proto.v1.ItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.Item;
      reader.readMessage(value,proto.v1.Item.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.v1.Item.serializeBinaryToWriter
    );
  }
};


/**
 * optional Item item = 1;
 * @return {?proto.v1.Item}
 */
proto.v1.ItemResponse.prototype.getItem = function() {
  return /** @type{?proto.v1.Item} */ (
    jspb.Message.getWrapperField(this, proto.v1.Item, 1));
};


/**
 * @param {?proto.v1.Item|undefined} value
 * @return {!proto.v1.ItemResponse} returns this
*/
proto.v1.ItemResponse.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.ItemResponse} returns this
 */
proto.v1.ItemResponse.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ItemResponse.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.ItemsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.v1.Item.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ItemsResponse}
 */
proto.v1.ItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ItemsResponse;
  return proto.v1.ItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ItemsResponse}
 */
proto.v1.ItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.Item;
      reader.readMessage(value,proto.v1.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.v1.Item.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated Item items = 1;
 * @return {!Array<!proto.v1.Item>}
 */
proto.v1.ItemsResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.v1.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.Item, 1));
};


/**
 * @param {!Array<!proto.v1.Item>} value
 * @return {!proto.v1.ItemsResponse} returns this
*/
proto.v1.ItemsResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v1.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.Item}
 */
proto.v1.ItemsResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v1.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.ItemsResponse} returns this
 */
proto.v1.ItemsResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional uint32 total = 2;
 * @return {number}
 */
proto.v1.ItemsResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.ItemsResponse} returns this
 */
proto.v1.ItemsResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.v1);
